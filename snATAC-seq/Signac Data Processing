# Load the object and required packages.
library(Seurat)
library(Signac)
library(EnsDb.Mmusculus.v79)
ATAC <- readRDS("Ts65Dn_OPC_Senescence_ATAC_Object.rds")

# Add gene annotations to the object from the mouse genome.
annotations <- GetGRangesFromEnsDb(ensdb = EnsDb.Mmusculus.v79)
seqlevelsStyle(annotations) <- 'UCSC'
Annotation(ATAC) <- annotations

# Create new columns for the condition and replicate.
ATAC_1 <- strsplit(colnames(ATAC), split = "_") 
ATAC@meta.data <- cbind(ATAC@meta.data, ATAC_1)
colnames(ATAC@meta.data)[which(names(ATAC@meta.data) == "ATAC_1")] <- "Condition"
ATAC_1 <- strsplit(colnames(ATAC), split = "-")
ATAC@meta.data <- cbind(ATAC@meta.data, ATAC_1$X2)
colnames(ATAC@meta.data)[which(names(ATAC@meta.data) == "ATAC_1$X2")] <- "Replicate"
ATAC$replicates <- paste(RNA$Condition, ATAC$rep, sep="_")

# Compute QC metrics of nucleosome signal, TSS enrichment, and blacklist ratio.
ATAC <- NucleosomeSignal(object = ATAC)
ATAC$nucleosome_group <- ifelse(ATAC$nucleosome_signal > 4, 'NS > 4', 'NS < 4')
FragmentHistogram(object = ATAC, group.by = 'nucleosome_group', region = 'chr1-1-10000000')
ATAC <- TSSEnrichment(ATAC, fast = FALSE)
ATAC$high.tss <- ifelse(ATAC$TSS.enrichment > 2, 'High', 'Low')
TSSPlot(ATAC, group.by = 'high.tss') + NoLegend()
ATAC$pct_reads_in_peaks <- ATAC$peak_region_fragments / ATAC$passed_filters * 100
ATAC$blacklist_ratio <- ATAC$blacklist_region_fragments / ATAC$peak_region_fragments

# Generate QC violin plots of nucleosome signal, TSS enrichment, and blacklist ratio.
VlnPlot(object = ATAC, features = c('pct_reads_in_peaks', 'peak_region_fragments',
                                    'TSS.enrichment', 'blacklist_ratio', 'nucleosome_signal'),
        pt.size = 0.1, ncol = 5)

# Remove cells that are outliers for these QC metrics.
ATAC <- subset(x = ATAC, subset = peak_region_fragments > 3000 & peak_region_fragments < 100000 &
pct_reads_in_peaks > 40 & nucleosome_signal < 4 & TSS.enrichment > 2)

# Perform dimensional reduction.
ATAC <- RunTFIDF(ATAC)
ATAC <- FindTopFeatures(ATAC, min.cutoff = 'q0')
ATAC <- RunSVD(object = ATAC)
DepthCor(ATAC)
ATAC <- RunUMAP(object = ATAC, reduction = 'lsi', dims = 2:30)
ATAC <- FindNeighbors(object = ATAC, reduction = 'lsi', dims = 2:30)
ATAC <- FindClusters(object = ATAC, algorithm = 3, resolution = 1.2, verbose = FALSE)

# Generate gene activity matrix.
gene.activities <- GeneActivity(ATAC)
ATAC[['RNA']] <- CreateAssayObject(counts = gene.activities)
ATAC <- NormalizeData(object = ATAC, assay = 'RNA', normalization.method = 'LogNormalize', scale.factor = median(ATAC$nCount_RNA))
DefaultAssay(ATAC) <- 'RNA'

# Use known canonical cell markers to begin identifying cell clusters and label clusters according to cell type.
new.cluster.ids <- c([celltypes])
names(new.cluster.ids) <- levels(ATAC)
ATAC <- RenameIdents(ATAC, new.cluster.ids)
DimPlot(ATAC, reduction = "umap", label = TRUE)

# Load the pre-processed snRNA-seq data and perform label transfer.
RNA <- readRDS("Ts65Dn_OPC_Senescence_RNA_Object.rds")
DefaultAssay(RNA) <- 'RNA'
RNA <- FindVariableFeatures(object = RNA, nfeatures = 5000)
transfer.anchors <- FindTransferAnchors(reference = RNA, query = ATAC, features = VariableFeatures(object = RNA), reference.assay = "RNA",
                                        query.assay = "RNA", reduction = "cca")
predicted.labels <- TransferData(anchorset = transfer.anchors, refdata = RNA$subclass, weight.reduction = ATAC[['lsi']], dims = 2:30)
ATAC <- AddMetaData(object = ATAC, metadata = predicted.labels)

# FIG 1B: UMAP plot for all cell types snATAC-seq data.
ATAC_colors = c("indianred2", "darkorange1", "#cdaf0a", "springgreen3", "lightseagreen",
               "lightskyblue", "royalblue1", "purple2", "magenta3", "orchid2")
DimPlot(ATAC, group.by = 'celltype', cols = ATAC_colors)

# Create subclusters for inhibitory and excitatory neurons (same code for both; change idents = Inhibitory or Excitatory).
ATAC_Inhibitory <- subset(x = ATAC, idents = "Inhibitory Neurons")
ATAC_Inhibitory <- FindVariableFeatures(ATAC_Inhibitory, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(ATAC_Inhibitory), 10)
all.genes <- rownames(ATAC_Inhibitory)
ATAC_Inhibitory <- ScaleData(ATAC_Inhibitory, features = all.genes)
ATAC_Inhibitory <- RunPCA(ATAC_Inhibitory, features = VariableFeatures(object = INB))
ATAC_Inhibitory <- FindNeighbors(ATAC_Inhibitory, dims = 1:20) 
ATAC_Inhibitory <- FindClusters(ATAC_Inhibitory, resolution = 0.5)
ATAC_Inhibitory <- RunUMAP(ATAC_Inhibitory, dims = 1:20)
Idents(ATAC_Inhibitory) <- seurat_clusters
new.cluster.ids <- c([subtypes])
names(new.cluster.ids) <- levels(ATAC_Inhibitory)
ATAC_Inhibitory <- RenameIdents(ATAC_Inhibitory, new.cluster.ids)

# FIG 1C: dotplot for all cell types select canonical marker genes.
features = c([select_markergenes])
ATAC@active.ident <- factor(x = ATAC@active.ident, levels = rev(c([celltypes])))
mapal <- rev(colorRampPalette(RColorBrewer::brewer.pal(11,"PRGn"))(256))
DotPlot(ATAC, features = features) +
        scale_color_gradientn(colours = mapal, limits = c(0,1), oob = scales::squish) +
        geom_point(aes(size=pct.exp), shape = 21, colour="black", stroke=0.5) +
        guides(size=guide_legend(override.aes=list(shape=21, colour="black", fill="white")))+ 
        xlab('Gene')+ ylab('Cell Type')+
        heme(axis.text.x = element_text(angle = 90))
ggplot(ATAC_table, aes(fill=Condition, y=Percent, x=Celltype)) + 
       geom_bar(position="stack", stat="identity") + scale_fill_manual(values=c("grey25", "#2c788e"))+
       theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
             panel.background = element_blank(), axis.line = element_line(colour = "black"))+
       geom_hline(yintercept=0.5, linetype='dashed', col = 'white')

# FIG 1E: UMAP plots for Inhibitory and Excitatory neuron subsets.
ATAC_Inhibitory <- readRDS("Ts65Dn_OPC_Senescence_ATAC_Inhibitory_Object.rds")
ATAC_Excitatory <- readRDS("Ts65Dn_OPC_Senescence_ATAC_Inhibitory_Object.rds")
order_exc = c([subtypes])
ATAC_Inhibitory@active.ident <- factor(x = ATAC_Inhibitory@active.ident, levels = c([subtypes]))
ATAC_Excitatory@active.ident <- factor(x = ATAC_Excitatory@active.ident, levels = c([subtypes]))
cols_inb = c("#e3eeca", "#a8d279", "#6abe44", "#2c8843", "#1e6430", "#86A137")
cols_exc = c("#deb787", "#d8a41f", "#e3da2d", "#beb671", "#8a8657", "#9f7922", "#efe48c")
p3 <- DimPlot(ATAC_Inhibitory, cols = cols_inb, pt.size = 0.01)
p4 <- DimPlot(ATAC_Excitatory, cols = cols_exc, pt.size = 0.01)
