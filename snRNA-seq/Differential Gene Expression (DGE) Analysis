# Load the object and required packages.
library(Seurat)
library(GenomeInfoDb)
library(EnsDb.Mmusculus.v79)
library(patchwork)
library(dplyr)
RNA <- readRDS("Ts65Dn_OPC_Senescence_RNA_Object.rds")
DefaultAssay(RNA) <- 'RNA'
RNA$celltype <- RNA@active.ident
RNA$group_manual_labels <- paste(RNA$Condition, RNA$celltype, sep="_")
Idents(RNA) <- RNA$group_manual_labels
celltypes <- na.omit(unique(RNA$celltype))
counts <- plyr::count(RNA@meta.data[, c("Condition", "group_manual_labels")])

# Perform differential gene expression analysis (same analysis to be performed on Inhibitory and Excitatory neurons).
DEGs <- list()
for(celltype in celltypes){
    des[[celltype]] <- list()
    Control <- paste0("Control_", celltype)
    DS <- paste0("DS_", celltype)
    comparisons <- list(DS_Control=c(DS, Control))
    for(comparison in comparisons){
        if(isTRUE(counts$freq[counts$group_manual_labels==comparison[1]] > 50 
                  & counts$freq[counts$group_manual_labels==comparison[2]] > 50)){
        name <- paste(comparison, collapse="_vs_")
        diffs <- FindMarkers(RNA, ident.1 = comparison[1], ident.2 = comparison[2], min.pct = 0.05,
                             latent.vars = 'nCount_RNA', test.use = "LR", logfc.threshold=0.1)
        diffs$FDR <- p.adjust(diffs$p_val, method="BH")
        diffs$sig <- diffs$FDR<0.05
        diffs$location <- rownames(diffs)
        DEGs[[celltype]][[name]] <- diffs
    } else{
      message("skipping comparison ", comparison, " for ", celltype, " because there were not enough cells")
    }
  }
}
for(celltype in names(DEGs)){
    dat <- DEGs[[celltype]]
    write_xlsx(dat, paste0(celltype, "_DGE.xlsx"))
}

# FIG 2A: striplot of all cell types DEGs.
bind <- rbind(a,b,c,d,e,f,g,h,i,j)
n <- length(rownames(bind))
for (i in 1:n) {
  bind$Classification[i] <- paste0(bind$celltype[i],",S")
  if (bind$FDR[i] > 0.05) {bind$Classification[i] <- "AnonS"}
  if (abs(bind$avg_log2FC[i]) < 0.2){bind$Classification[i] <- "AnonS"}
}
bind <- bind[order(bind$Classification),]
colors <- c("indianred2","darkorange1","#cdaf0a","springgreen3","lightseagreen",
            "lightskyblue","royalblue1","purple2", "magenta3","orchid2")
set.seed(2)
ggplot(bind, aes(x=celltype,y=avg_log2FC,color=Classification), pch=16, cex=0.01)+
  geom_jitter(width = 0.07,height = 0)+
  labs(title = "Gene Expression in DS vs. Control",size = 0.05, x = "Cell Type", y = "Avg Log2FC") +
  scale_y_continuous(limit = c(-2,2)) + scale_color_manual(values=colors) + geom_hline(yintercept=0) +
  theme(axis.text.x = element_text(angle=90,hjust=1,vjust = 0.5), 
        axis.line = element_line (color = "black"),
        plot.title = element_text(hjust = 0.5,size = 15), legend.position='none',
        panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank())

# FIG 2B: UpSet plot of all cell types DEGs.
astrocytes_DEGs <- (astrocytes[astrocytes$FDR < 0.05,])$location
endothelial_DEGs <- (endothelial[endothelial$FDR < 0.05,])$location
excitatory_DEGs <- (excitatory[excitatory$FDR < 0.05,])$location
inhibitory_DEGs <- (inhibitory[inhibitory$FDR < 0.05,])$location
microglia_DEGs <- (microglia[microglia$FDR < 0.05,])$location
mOLs_DEGs <- (mOLs[mOLs$FDR < 0.05,])$location
OPCs_DEGs <- (OPCs[OPCs$FDR < 0.05,])$location
pericytes_DEGs <- (pericytes[pericytes$FDR < 0.05,])$location
smc1_DEGs <- (smc1[smc1$FDR < 0.05,])$location
smc2_DEGs <- (smc2[smc2$FDR < 0.05,])$location
library(UpSetR)
greys <- rep(c("grey60","grey40","grey10"), times = c(21,9,50))
cells <- list("Astrocytes" = astrocytes_DEGs, "Endothelial" = endothelial_DEGs,
              "Excitatory" = excitatory_DEGs, "Inhibitory" = inhibitory_DEGs,
              "Mature OLs" = mOLs_DEGs, "Microglia" = microglia_DEGs, "OPCs" = OPCs_DEGs,
              "Pericytes" = pericytes_DEGs, "SMCs1" = smc1_DEGs, "SMCs2" = smc2_DEGs)
upset(fromList(cells), nsets = 10, keep.order = TRUE, 
      sets = c("SMCs2", "SMCs1", "Pericytes","OPCs","Microglia","Mature OLs",
               "Inhibitory","Excitatory","Endothelial","Astrocytes"),
      sets.bar.color = c("orchid2","magenta3","purple2","royalblue1","lightskyblue","lightseagreen",
                         "springgreen3","#cdaf0a","darkorange1","indianred2"),
      main.bar.color = c("springgreen3","#cdaf0a","lightseagreen","indianred2","royalblue1","lightskyblue",
                         "darkorange1","magenta3","purple2","orchid2",greys))

# FIG 4C: volcano plot of OPC DEGs.
with(OPC_DGE, plot(avg_log2FC, -log10(FDR), pch=16, cex = 0.5, col = "grey50", main="DEGs in OPCs",
                   xlim = c(-0.5,0.5), ylim = c(0.2,10), log = "y", abline(h=1.3,v=c(-0.1,0.1),lty=2,lwd=1.5)))
with(subset(OPC_DGE, FDR<.05 & avg_log2FC > 0), points(avg_log2FC, -log10(FDR), pch=16, cex = 0.55, col="#9970ab"))
with(subset(OPC_DGE, FDR<.05 & avg_log2FC < 0), points(avg_log2FC, -log10(FDR), pch=16,cex = 0.55, col="#5aae61"))
Up <- subset(OPC_DGE, FDR< .05 & avg_log2FC > 0)
Down <- subset(OPC_DGE, FDR< .05 & avg_log2FC < 0)
geneup <- c('Serpine2','Olig1','Cd9','Gpr17','Mmp15','Ptn')
genedown <- c('Snhg11','Ptprn','Erbb4')
for (genes in geneup){
     with(subset(Up, gene == genes),points(avg_log2FC, -log10(FDR), pch=16,cex = 1, col="#633e73"))
}
for (genes in genedown){
     with(subset(Down, gene == genes),points(avg_log2FC, -log10(FDR), pch=16,cex = 1, col="#327538"))
}
