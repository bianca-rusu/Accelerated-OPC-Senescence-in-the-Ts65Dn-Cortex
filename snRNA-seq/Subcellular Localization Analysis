# Note: information about subcellular localization was obtained from the COMPARTMENTS database (Binder et al., 2014).
compartment_predictions <- read_xlsx('COMPARTMENTS_Predictions.xlsx')
filter <- c("Nucleus",'Plasma membrane',"Cytosol","Mitochondrion","Endoplasmic reticulum","Extracellular region","Peroxisome")
predictions <- compartment_predictions[compartment_predictions$Compartment %in% filter,]
predictions$Ensembl_ID <- NULL;predictions$GO_Term <- NULL; predictions$Source <- NULL
OPCs <- read_xlsx("Ts65Dn_OPC_RNA_DEGs.xlsx")
OPCs <- OPCs[OPCs$FDR<0.05,]
OPCs_prediction <- predictions[predictions$Gene %in% OPCs$location,]
OPCs_prediction$p_val <- NULL;OPCs_prediction$avg_log2FC <- NULL;OPCs_prediction$pct.1 <- NULL;
OPCs_prediction$pct.2 <- NULL;OPCs_prediction$p_val_adj <- NULL;OPCs_prediction$FDR <- NULL
OPCs_prediction_sig <- OPCs_prediction[OPCs_prediction$sig == TRUE,]
OPCs_prediction_sig <- OPCs_prediction[!is.na(OPCs_prediction$location),]
OPCs_prediction_sig$sig <- NULL
OPCs_prediction_counts <- OPCs_prediction_sig %>%
  count(location)

# FIG 4D: barplot of OPC subcellular localization.
ggplot(data = OPC_Subcellular_Localization, aes(x = Location)) +
       geom_col(position = position_dodge(0.8), alpha=0.1, size=0.6,width=0.6,
                aes(x = Location, y = Value, color = Direction, fill = Direction)) +
       scale_color_manual(values = c("#5aae61","#9970ab")) +
       scale_fill_manual(values = c("#5aae61","#9970ab")) +  
       scale_y_continuous(name = "Number of Genes", expand = c(0,0), limits = c(0,45),
                          breaks = seq(0,45, by = 10)) +
       theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
             panel.background = element_blank(), axis.line = element_line(color = "black")) +
       geom_hline(aes(yintercept=0), color="black", linetype="solid", size=0.5)

# FIG 4E: heatmap of OPC subcellular localization.
ggplot(OPC_Subcellular_LogChange, aes(celltype, gene, fill= avg_log2FC)) + 
       geom_tile()+
       scale_fill_distiller(palette = "PRGn") +
       scale_y_discrete(limits=rev) +
       theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
             panel.background = element_blank(), axis.line = element_line(color = "white"))
